{"version":3,"sources":["context/CalcContext.js","components/Display/Display.js","components/Button/Button.js","App.js","reportWebVitals.js","index.js"],"names":["CalcContext","React","createContext","CalcProvider","props","useState","result","setResult","displayNum","setDisplayNum","Provider","value","partialCalc","children","Display","useContext","className","Button","setValue","operator","setOperator","map","item","index","onClick","key","Number","isInteger","parseFloat","toFixed","console","log","makeCalc","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAEMA,EAAcC,IAAMC,gBAEpBC,EAAe,SAACC,GAAW,IAAD,EACAC,mBAAS,GADT,mBACrBC,EADqB,KACbC,EADa,OAEQF,mBAAS,GAFjB,mBAErBG,EAFqB,KAETC,EAFS,KAQ5B,OACI,mCACA,cAACT,EAAYU,SAAb,CACIC,MAAO,CACHL,OAAQA,EACRM,YATQ,SAACD,GACjBJ,EAAUI,IASFH,WAAYA,EACZC,cAAeA,GALvB,SAQSL,EAAMS,cCXRC,G,WANC,WAAO,IAAD,EACyCC,qBAAWf,GAAtDQ,GADE,EACVF,OADU,EACFE,YADE,EACUI,YADV,EACuBH,cAEzC,OAAS,qBAAKO,UAAU,kBAAf,SAAkCR,MCsFhCS,G,MA1FA,SAACb,GAAW,IAAD,EACqCW,qBAAWf,GAA9DM,EADc,EACdA,OAAoBM,GADN,EACNJ,WADM,EACMI,aAAaH,EADnB,EACmBA,cADnB,EAEMJ,mBAAS,GAFf,mBAEdM,EAFc,KAEPO,EAFO,OAGYb,mBAAS,IAHrB,mBAGdc,EAHc,KAGJC,EAHI,KA0ErB,OACG,mCAHS,CAAC,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,KAIvDC,KAAI,SAACC,EAAMC,GAAP,OACN,wBACAZ,MAAOW,EAEPN,UAAS,eAAUO,GACnBC,QAAS,kBA3EJ,SAACC,GACd,GAAGC,OAAOC,UAAUF,GAChBP,EAASU,WAAW,GAAD,OAAIjB,GAAJ,OAAYc,KAC/BhB,EAAcmB,WAAW,GAAD,OAAIjB,GAAJ,OAAYc,UAGpC,GAAGN,GAAqB,MAARM,EAAa,CAEzB,OAAON,GACH,IAAK,IACDP,EAAYN,EAASK,GACrBF,EAAcH,EAASK,GACvBO,EAAS,GACTE,EAAY,IAChB,MACA,IAAK,IACDR,EAAYN,EAASK,GACrBF,EAAcH,EAASK,GACvBO,EAAS,GACTE,EAAY,IAChB,MACA,IAAK,IACDR,EAAYN,EAASK,GACrBF,EAAcH,EAASK,GACvBO,EAAS,GACTE,EAAY,IAChB,MACA,IAAK,IACDR,EAAYN,EAASK,GACrBF,GAAgBH,EAASK,GAAOkB,QAAQ,IACxCX,EAAS,GACTE,EAAY,IAChB,MACA,IAAK,IACDU,QAAQC,IAAI,SACZnB,EAAYN,EAASK,GAErBO,EAAS,GAGN,MAARO,GACCL,EAAYK,QAIhB,OAAOA,GACH,IAAK,IACDb,EAAY,GACZH,EAAc,GACdS,EAAS,GACTE,EAAY,IAChB,MACA,IAAK,IACDR,EAAY,GACZM,EAAS,GACTE,EAAY,IAChB,MACD,QACKR,EAAYD,GACZO,EAAS,GACTE,EAAYK,IAeLO,CAASV,IAJxB,SAMKA,GAJAA,U,MC/DNW,MAbf,WACE,OACE,qBAAKjB,UAAU,oBAAf,SACE,qBAAKA,UAAU,6DAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,YCDKkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91f44fc7.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\n\r\nconst CalcContext = React.createContext()\r\n\r\nconst CalcProvider = (props) => {\r\n    const [result, setResult] = useState(0);\r\n    const [displayNum, setDisplayNum] = useState(0);\r\n\r\n    const partialCalc = (value) =>{\r\n        setResult(value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <CalcContext.Provider \r\n            value={{\r\n                result: result,\r\n                partialCalc: partialCalc,\r\n                displayNum: displayNum,\r\n                setDisplayNum: setDisplayNum\r\n            }}\r\n            >\r\n                {props.children}\r\n        </CalcContext.Provider>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport {CalcProvider, CalcContext}","import React, {useContext} from 'react';\r\nimport {CalcContext} from '../../context/CalcContext';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './display.css';\r\n\r\nconst Display = () => {\r\n    const { result, displayNum, partialCalc, setDisplayNum } = useContext(CalcContext);\r\n\r\n    return ( <div className='item-16 bg-dark'>{displayNum}</div> );\r\n}\r\n \r\nexport default Display;","import React, {useContext, useState} from 'react';\r\nimport { CalcContext } from '../../context/CalcContext';\r\nimport './button.css';\r\n\r\nconst Button = (props) => {\r\n    const { result, displayNum, partialCalc, setDisplayNum } = useContext(CalcContext);\r\n    const [ value, setValue ] = useState(0);\r\n    const [ operator, setOperator ] = useState('');\r\n    // const [displayedNum, setDisplayedNum] = useState(0);\r\n\r\n    const makeCalc = (key) => {\r\n        if(Number.isInteger(key)){\r\n            setValue(parseFloat(`${value}${key}`)) //concatenate numbers\r\n            setDisplayNum(parseFloat(`${value}${key}`));\r\n        }\r\n        else{\r\n            if(operator && (key !== 'C')){ //makes the calc according to the operation if the user doesn't press delete\r\n                \r\n                switch(operator){\r\n                    case '+':\r\n                        partialCalc(result + value);\r\n                        setDisplayNum(result + value);\r\n                        setValue(0);\r\n                        setOperator('');\r\n                    break;\r\n                    case '-':\r\n                        partialCalc(result - value);\r\n                        setDisplayNum(result - value);\r\n                        setValue(0);\r\n                        setOperator('');\r\n                    break;\r\n                    case 'X':\r\n                        partialCalc(result * value);\r\n                        setDisplayNum(result * value);\r\n                        setValue(0);\r\n                        setOperator('');\r\n                    break;\r\n                    case '/':\r\n                        partialCalc(result / value);\r\n                        setDisplayNum( (result / value).toFixed(2) );\r\n                        setValue(0);\r\n                        setOperator('');\r\n                    break;\r\n                    case '=':\r\n                        console.log('igual')\r\n                        partialCalc(result + value);\r\n\r\n                        setValue(0);\r\n                    break;\r\n                }\r\n                if(key !== '='){\r\n                    setOperator(key)\r\n                }\r\n            }\r\n            else{\r\n                switch(key){\r\n                    case 'C':\r\n                        partialCalc(0);\r\n                        setDisplayNum(0);\r\n                        setValue(0);\r\n                        setOperator('');\r\n                    break;\r\n                    case '=':\r\n                        partialCalc(0);\r\n                        setValue(0);\r\n                        setOperator('');\r\n                    break;\r\n                   default:\r\n                        partialCalc(value);\r\n                        setValue(0);\r\n                        setOperator(key)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const keys = ['C', '/', 7, 8, 9, 'X', 4, 5, 6, '-', 1, 2, 3, '+', 0, '='];\r\n\r\n     return (\r\n        <>\r\n            {keys.map((item, index) => (\r\n                <button \r\n                value={item}\r\n                key={item}\r\n                className={`item-${index}`}\r\n                onClick={() => makeCalc(item)}\r\n                >\r\n                    {item}\r\n                </button>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Button;","import React from 'react';\nimport { CalcProvider } from './context/CalcContext.js';\nimport Display from './components/Display/Display';\nimport Button from './components/Button/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './app.css';\n\nfunction App() {\n  return (\n    <div className=\"position-relative\">\n      <div className=\"wrapper position-absolute top-50 start-50 translate-middle\">\n        <CalcProvider>\n          <Display />\n          <Button />\n        </CalcProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}